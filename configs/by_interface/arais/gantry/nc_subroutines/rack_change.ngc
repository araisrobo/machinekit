o<rack_change> sub
G90
M73 (auto-restore modal settings on return)
G61.1
; (MSG, rack_change begin)
; (DEBUG, current_tool: #<_current_tool>)
; (DEBUG, current_pocket: #<_current_pocket>)
; (DEBUG, selected_tool: #<_selected_tool>)
; (DEBUG, selected_pocket: #<_selected_pocket>)
o600 if[#<_current_pocket> EQ #<_selected_pocket>]
    o<rack_change> endsub [1]
    m2
o600 endif
; unload previous tool
o300 if [#<_current_pocket> GT 0]
     o<tool_getput_move_current> call [#<_current_pocket>]  
o300 endif

; 等待使用者輸入一個 in 的訊號，然後才可以放刀
; (MSG, press key-1 to release)
; M66 P #<_ini[pins]confirmed> L3 Q10000 ; 
M64 P #<_ini[pins]release> ; set release pin, M62: set-motion-sync-out
M66 P #<_ini[pins]released> L3 Q3; wait on released pin, L3: wait HIGH Q3: timeout 3sec
G4P1 ; 為了避免誤認成同一個訊號
; (MSG, press key-1 move to each tool)
; M66 P #<_ini[pins]confirmed> L3 Q10000 ; 
; go to new tool
o500 if [#<_selected_pocket> GT 0]
    o<tool_getput_move_select> call [#<_selected_pocket>]  
o500 else
     g53 g0 Z #<_ini[change_position]safe_z>    
o500 endif
    ; 等待使用者輸入一個 in 的訊號，然後才可以夾刀
    ; (MSG, press key-1 to clamped)
    ; M66 P #<_ini[pins]confirmed> L3 Q10000 ;
    G4P0.25 ; 為了避免誤認成同一個訊號
    M65 P #<_ini[pins]release> ; clear release pin, M62: reset-motion-sync-out
    M66 P #<_ini[pins]clamped> L3 Q3; wait on clamped pin, L3: wait HIGH Q3: timeout 3sec
    ; G4P1 ; 為了避免誤認成同一個訊號
    ; (MSG, press key-1 to finished tool change)
    ;M66 P #<_ini[pins]confirmed> L3 Q10000 ;

; the purpose of this move is unclear to me
; micges - please explain!
; o400 if [#<_absolute>]
;      G91
;      G0 Z-6 
;      G90
; o400 else
;      G0 Z-6
; o400 endif
; M65 P #<_ini[pins]lock> ; drop lock pin
; G4  P #<_ini[dwell]post_unlock> 

; NB: this is reordered wrt micges patch:
; tool_holder_clear_move came after load_tool_msg
o<tool_holder_clear_move> call

; succeed by returning a positive value
o<rack_change> endsub [1]
m2
