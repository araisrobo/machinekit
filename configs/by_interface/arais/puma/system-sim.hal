############################## Preload Component ################################################
# loadrt sub2            names=sub2.gantry
# loadrt blend           names=blend_y_vel
# loadrt blender         names=blender
# load 3 differentiators for accel signals
# loadrt ddt count=3
# load additional blocks
# loadrt hypot count=2
# Install debounce filters for transfer-signal
# loadrt debounce cfg="16"
# Set debounce time: number of servo-period
# setp debounce.0.delay 125
loadrt and2  names=and2.0
loadrt timedelay        names=son_delay
setp son_delay.on-delay     2
setp son_delay.off-delay    0

############################## Kinematics & Motion Controller ####################################
# Kinematics

loadrt [KINS]KINEMATICS
loadrt tp
##############################################################################
# motion controller, get name and thread periods from ini file
loadrt [EMCMOT]EMCMOT servo_period_nsec=[EMCMOT]SERVO_PERIOD num_dio=[EMCMOT]NUM_DIO num_aio=[EMCMOT]NUM_AIO num_joints=[KINS]JOINTS kins=[KINS]KINEMATICS tp=tp

# tick message flow: servo_tick => ring_jcmd => wosi_trans
# this creates the named ring ring_jcmd as record ring
newring ring_jcmd 16384 record

addf son_delay                  servo-thread
addf motion-command-handler     servo-thread
addf motion-controller          servo-thread
addf and2.0                     servo-thread    # and2 for spindle velocity to analog.out



net rev-input       => motion.tp-reverse-input



# create HAL signals for position commands from motion module
net j0-pos-cmd      axis.0.motor-pos-cmd        => axis.0.motor-pos-fb
net j1-pos-cmd      axis.1.motor-pos-cmd        => axis.1.motor-pos-fb
net j2-pos-cmd      axis.2.motor-pos-cmd        => axis.2.motor-pos-fb
net j3-pos-cmd      axis.3.motor-pos-cmd        => axis.3.motor-pos-fb
net j4-pos-cmd      axis.4.motor-pos-cmd        => axis.4.motor-pos-fb
net j5-pos-cmd      axis.5.motor-pos-cmd        => axis.5.motor-pos-fb

# create signals for tool loading loopback
net tool-prep-loop iocontrol.0.tool-prepare iocontrol.0.tool-prepared
net tool-change-loop iocontrol.0.tool-change iocontrol.0.tool-changed

# estop loopback
net estop-loop iocontrol.0.user-enable-out iocontrol.0.emc-enable-in
# let ESTOP switch control ESTOP behavior
# net din_0  => iocontrol.0.emc-enable-in

# # connect signals from FPGA.
# TODO: probed pos for gantry joint
net x-probed-pos    => axis.0.probed-pos
net y-probed-pos    => axis.1.probed-pos
net z-probed-pos    => axis.2.probed-pos
net j3-probed-pos   => axis.3.probed-pos
net j4-probed-pos   => axis.4.probed-pos
net j5-probed-pos   => axis.5.probed-pos

# for usb-homing:
setp axis.0.joint-id        0
setp axis.0.home-sw-id      [JOINT_0]HOME_SW_ID
net [JOINT_0]HOME_SW_NET    axis.0.home-sw-in
net j0-homing               axis.0.homing
net a0-risc-probe-vel       axis.0.risc-probe-vel
net j0-risc-probe-pin       axis.0.risc-probe-pin
net j0-risc-probe-type      axis.0.risc-probe-type

# for usb-homing: y-axis gantry
setp axis.1.joint-id        1
setp axis.1.home-sw-id      [JOINT_1]HOME_SW_ID
net [JOINT_1]HOME_SW_NET    axis.1.home-sw-in
net j1-homing               axis.1.homing
net j1-risc-probe-vel       axis.1.risc-probe-vel 
net j1-risc-probe-pin       axis.1.risc-probe-pin
net j1-risc-probe-type      axis.1.risc-probe-type 

# for usb-homing:
setp axis.2.joint-id        2
setp axis.2.home-sw-id      [JOINT_2]HOME_SW_ID
net [JOINT_2]HOME_SW_NET    axis.2.home-sw-in
net j2-homing               axis.2.homing
net j2-risc-probe-vel       axis.2.risc-probe-vel
net j2-risc-probe-pin       axis.2.risc-probe-pin
net j2-risc-probe-type      axis.2.risc-probe-type

# for usb-homing:
setp axis.3.joint-id        3
setp axis.3.home-sw-id      [JOINT_3]HOME_SW_ID
net [JOINT_3]HOME_SW_NET    axis.3.home-sw-in
net j3-homing               axis.3.homing
net j3-risc-probe-vel       axis.3.risc-probe-vel
net j3-risc-probe-pin       axis.3.risc-probe-pin
net j3-risc-probe-type      axis.3.risc-probe-type

# for usb-homing:
setp axis.4.joint-id        4
setp axis.4.home-sw-id      [JOINT_4]HOME_SW_ID
net [JOINT_4]HOME_SW_NET    axis.4.home-sw-in
net j4-homing               axis.4.homing
net j4-risc-probe-vel       axis.4.risc-probe-vel
net j4-risc-probe-pin       axis.4.risc-probe-pin
net j4-risc-probe-type      axis.4.risc-probe-type

# for usb-homing:
setp axis.5.joint-id        5
setp axis.5.home-sw-id      [JOINT_5]HOME_SW_ID
net [JOINT_5]HOME_SW_NET    axis.5.home-sw-in
net j5-homing               axis.5.homing
net j5-risc-probe-vel       axis.5.risc-probe-vel
net j5-risc-probe-pin       axis.5.risc-probe-pin
net j5-risc-probe-type      axis.5.risc-probe-type


# RISC_CMD REQ and ACK
net update-pos-req          =>  motion.update-pos-req
net rcmd-state              =>  motion.rcmd-state

# trigger type 
# 	0: or
# 	1: analog only
# 	2: digital only
# 	3: and
# cond(1): probe HIGH
setp motion.trigger.din     51 
setp motion.trigger.ain     2 
setp motion.trigger.type    2 
setp motion.trigger.cond    1 
setp motion.trigger.level   1000 

net teleop_mode         <= motion.teleop-mode
net coord_mode          <= motion.coord-mode
# for G38.X:
net probing             <= motion.probing
net trigger_result      => motion.trigger-result
net rtp_running         => motion.rtp-running


net machine-on      son_delay.out  
