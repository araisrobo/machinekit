[WOSI] WISHBONE Over Serial Interface Application Layer Protocol
  + Refer to 802.3 MAC Frame (http://en.wikipedia.org/wiki/Ethernet)
  + take its Preamble and Start-of-Frame-Delimiter from 802.3 MAC Frame
  + take its 16-bit CRC
  + The WOSI messages is organized as the following sequence:
            +---> [WOSI_FRAME][WOSI_FRAME][...] --->+
    HOST <==>                                       <==> FPGA Tranceiver
            +<--- [WOSI_FRAME][WOSI_FRAME][...] <---+
  + drop a WOSI_FRAME if it's CRC is incorrect
  + adopt GO-BACK-N ARQ for WOSI_FRAME
  + RX.WOSI_FRAME.MAILBOX has higher priority than all the other WOSI_FRAMEs
  + for JOINT command:
    - HOST send DIFFERENTIATE_JOINT_POSITION_COMMAND to FPGA.RISC
    - FPGA.RISC do close-loop control based on received position commands
  + for GPIO.OUTPUT:
    - HOST send GPIO.OUTPUT command to FPGA.RISC
    - FPGA.RISC update corresponding GPIO REGISTER
  + for GPIO.INPUT:
    - FPGA.RISC drop GPIO REGISTER to mailbox
    - HOST parse GPIO REGISTER from fetchmail
  + for the other FPGA.RISC STATUS:
    - FPGA.RISC drop STATUS to mailbox
    - HOST parse STATUS from fetchmail
    - STATUS includes joint-encoder-position, joint-velocity, analog-channel ... etc.

WOSI_FRAME Format
===================
    PLOAD_SIZE_TX: 
        + (host-to-target): 0x03 ~ 0xFF bytes for {WOSIF_COMMAND, TID, PLOAD_SIZE_RX, WOSI_PAYLOAD}
        + (target-to-host): 0x02 ~ 0xFF bytes for Responsed payload (not include the size of CRC-16)
    WOSIF_COMMAND:
        + 00, TYP_WOSIF : typical WOSI_FRAME packet 
        + 01, SYS_RST   : system reset that set Expected TID of receiver to 0
        + 02, MAILBOX   : MAIL from RISC
        + 03, REALTIME  : real-time WOSIF command
    TID:
        + Transaction ID for GO-BACK-N protocol
    PLOAD_SIZE_RX: 
        + 0x02 ~ 0xFF bytes for Responsing WOSI_FRAME
        + initiated by WOSI Read commands from this frame.
        + there would be no PAYLOAD in response WOSI_FRAME;
          in this case, the PLOAD_SIZE_RX should be 2 
          {WOSIF_COMMAND, TID/MAIL_TAG}.
    WOSI_PAYLOAD is composed of multiple WOSI packets. 
        + WOSI_PAYLOAD{[WOSI][WOSI][WOSI]...}
    CRC-16: 
        + covers the PLOAD_SIZE_TX, PLOAD_SIZE_RX, and WOSI_PAYLOAD.
        + it's little endian
    
    Properties of WOSIF_COMMAND:
        + 00, TYP_WOSIF: 
            - typical WOSI_FRAME packet 
            - a TX-REQ should get a RX-ACK for NEXT-TID
        + 01, SYS_RST: 
            - reset Expected TID of receiver to 0
            - TX-REQ only; no RX-ACK for SYS_RST
        + 02, MAILBOX: 
            - MAIL from OR32; need at least MAIL_TAG.
            - RX-ACK WOSI FRAME
        + 03, REALTIME: 
            - real-time WOSIF command. 
            - the PAYLOAD of this WOSIF will get processed immediately
            - no TID for both TX-REQ and RX-ACK of REALTIME WOSIF
            - a TX-REQ should get a RX-ACK

WOSI Frame (TX)
===============================================================================
      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ --------
     |Preamble (2 octets of 10101010)|SOFD (10101011)| PLOAD_SIZE_TX | HEADER
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ -------- 
     | WOSIF_COMMAND |     TID       | PLOAD_SIZE_RX |               | 
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+               |  
     |                  WOSI_PAYLOAD                                 |  
     |               Byte[6] to Byte[6+PLOAD_SIZE_TX]                | PAYLOAD
     |                                                               |
     |                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                               |        CRC-16                 |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ --------

WOSI Frame (RX) (for TYP_WOSIF, 00)
===============================================================================
      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ --------
     |Preamble (2 octets of 10101010)|SOFD (10101011)| PLOAD_SIZE_TX | HEADER
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ -------- 
     | WOSIF_COMMAND |   NEXT-TID    |                               | 
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               |  
     |                  WOSI_PAYLOAD                                 |  
     |               Byte[6] to Byte[6+PLOAD_SIZE_TX]                | PAYLOAD
     |                                                               |
     |                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                               |        CRC-16                 |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ --------

WOSI Frame (RX) (for MAILBOX messages, 02)
===============================================================================
      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ --------
     |Preamble (2 octets of 10101010)|SOFD (10101011)| PLOAD_SIZE_TX | HEADER
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ -------- 
     | WOSIF_COMMAND |            MAIL_TAG           |               | 
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ -------- 
     |  BP_TICK                                      |               | 
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+               |  
     |                   MAIL_PAYLOAD                                |  
     |               Byte[10] to Byte[10+PLOAD_SIZE_TX]              | PAYLOAD
     |                                                               |
     |                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                               |        CRC-16                 |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ --------

WOSI Frame (TX - REALTIME)
===============================================================================
      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ --------
     |Preamble (2 octets of 10101010)|SOFD (10101011)| PLOAD_SIZE_TX | HEADER
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ -------- 
     | WOSIF_COMMAND | PLOAD_SIZE_RX |                               | 
     +-+-+-+-+-+-+-+-+- - - - - - - -                                |  
     |                  WOSI_PAYLOAD                                 |  
     |               Byte[5] to Byte[5+PLOAD_SIZE_TX]                | PAYLOAD
     |                                                               |
     |                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                               |        CRC-16                 |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ --------

WOSI Frame (RX - REALTIME, 03)
===============================================================================
      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ --------
     |Preamble (2 octets of 10101010)|SOFD (10101011)| PLOAD_SIZE_TX | HEADER
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ -------- 
     | WOSIF_COMMAND |                                               | 
     +-+-+-+-+-+-+-+-+                                               |  
     |                  WOSI_PAYLOAD                                 |  
     |               Byte[5] to Byte[5+PLOAD_SIZE_TX]                | PAYLOAD
     |                                                               |
     |                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                               |        CRC-16                 |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ --------

WOSI packet Format
===================
    (WOSI_PAYLOAD is composed of multiple WOSI packets)
      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ --------
     |F|  DATA_SIZE  |            WB_ADDR            |               |  HEADER
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+               | -------- 
     |                                                               |  DATA
     |                        DATA                                   |  
     |               Byte[4] to Byte[4+DATA_SIZE]                    |
     |                                                               |
     |                                     +-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                                     |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    FUNCTION(F):
        0: READ from wishbone
        1: WRITE to wishbone
    DATA_SIZE[6:0]: 
        support up to 128bytes of burst access
        1(7'h01) ~ 128(7'h00) bytes
    WB_ADDR[15:0]: WishBone Address; little endian
    WB Addressing Mode: Automatic Increment mode
        the WB_ADDR increments by one for each DATA byte

HOST:
  + send [WOSI_FRAME] messages, then recv [WOSI_FRAME] messages if any
  + TODO: HOST.Tx thread: send [WOSI_FRAME] messages
  + TODO: HOST.Rx thread: recv [WOSI_FRAME] messages
